# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: "1"
servers:
    - url: https://api.lasthearth.ru
paths:
    /v1/items:
        post:
            tags:
                - TrademarketService
            operationId: TrademarketService_Create
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/leaderboard:
        get:
            tags:
                - LeaderboardService
            description: List of leaderboard entries.
            operationId: LeaderboardService_ListEntries
            parameters:
                - name: filter
                  in: query
                  description: Leaderboard filter. Service will return entries sorted by provided filter.
                  schema:
                    type: integer
                    format: enum
                - name: limit
                  in: query
                  description: |-
                    The maximum number of entries to return.
                     If unspecified, 25 entry will be returned.
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LeaderboardResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/news:
        get:
            tags:
                - NewsService
            operationId: NewsService_ListNews
            parameters:
                - name: page_size
                  in: query
                  description: |-
                    The maximum number of news to return. The service may return fewer than
                     this value.
                     If unspecified, at most 15 news will be returned.
                     The maximum value is 50; values above 50 will be coerced to 50.
                  schema:
                    type: integer
                    format: int32
                - name: page_token
                  in: query
                  description: |-
                    A page token, received from a previous `ListBooks` call.
                     Provide this to retrieve the subsequent page.

                     When paginating, all other parameters provided to `ListBooks` must match
                     the call that provided the page token.
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListNewsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - NewsService
            operationId: NewsService_CreateNews
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateNewsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/News'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/news/{id}:
        get:
            tags:
                - NewsService
            operationId: NewsService_GetNews
            parameters:
                - name: id
                  in: path
                  description: The unique identifier of the news item to retrieve.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/News'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - NewsService
            operationId: NewsService_DeleteNews
            parameters:
                - name: id
                  in: path
                  description: The unique identifier of the news item to delete.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/notifications:
        get:
            tags:
                - NotificationService
            description: |-
                Lists notifications for a specific user.

                 This method retrieves a paginated list of notifications for the specified
                 user. The response includes a list of notifications and a token for the next
                 page (if applicable).
            operationId: NotificationService_ListNotifications
            parameters:
                - name: page_size
                  in: query
                  description: |-
                    The maximum number of notifications to return. The service may return fewer
                     than this value. If unspecified, at most 15 notifications will be returned.
                     The maximum value is 15; values above 15 will be coerced to 15.
                  schema:
                    type: integer
                    format: int32
                - name: page_token
                  in: query
                  description: A token identifying a page of results the server should return.
                  schema:
                    type: string
                - name: order_by
                  in: query
                  description: |-
                    The field to sort by, followed by direction (e.g., "created_at desc" or "state asc").
                     Supported fields: "created_at", "state". If unspecified, defaults to "created_at desc".
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListNotificationsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/notifications/{id}:markAsRead:
        post:
            tags:
                - NotificationService
            description: |-
                Marks notification as read.

                 This method updates the state of a specific notification to "READ" for the
                 specified user. It does not return any data, only confirming the action's
                 success.
            operationId: NotificationService_MarkAsRead
            parameters:
                - name: id
                  in: path
                  description: |-
                    The identifier of the notification to mark as read.
                     Required.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/rules/question:
        post:
            tags:
                - RuleService
            description: Creates a new question about rules
            operationId: RuleService_CreateQuestion
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateQuestionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateQuestionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/rules/questions:
        get:
            tags:
                - RuleService
            description: Returns random questions about rules
            operationId: RuleService_GetRandomQuestions
            parameters:
                - name: count
                  in: query
                  description: Count of questions to return, if not specified, returns 5 questions
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetRandomQuestionsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/settlements:
        get:
            tags:
                - SettlementService
            description: List all settlements
            operationId: SettlementService_List
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - SettlementService
            description: Submit a new settlement registration request
            operationId: SettlementService_Submit
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SubmitRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SubmitResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/settlements/invitations/{invitation_id}:accept:
        post:
            tags:
                - SettlementService
            description: Accept an invitation to a settlement
            operationId: SettlementService_AcceptInvitation
            parameters:
                - name: invitation_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AcceptInvitationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/settlements/verifications:
        get:
            tags:
                - SettlementService
            description: List pending settlement requests (requires admin privileges)
            operationId: SettlementService_ListPending
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListPendingResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/settlements/{id}:
        get:
            tags:
                - SettlementService
            description: Get settlement by ID
            operationId: SettlementService_Get
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/settlements/{id}/verification:approve:
        post:
            tags:
                - SettlementService
            description: Approve a settlement request (requires admin privileges)
            operationId: SettlementService_Approve
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ApproveRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApproveResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/settlements/{id}/verification:reject:
        post:
            tags:
                - SettlementService
            description: Reject a settlement request (requires admin privileges)
            operationId: SettlementService_Reject
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RejectRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RejectResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/settlements/{id}/verification:status:
        get:
            tags:
                - SettlementService
            description: Get the verification status of a settlement request
            operationId: SettlementService_VerificationStatus
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VerificationStatusResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/settlements/{settlement_id}/invitations:
        get:
            tags:
                - SettlementService
            description: Get all invitations to a settlement
            operationId: SettlementService_GetInvitations
            parameters:
                - name: settlement_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetInvitationsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - SettlementService
            description: Invite a member to a settlement (requires being the settlement leader)
            operationId: SettlementService_InviteMember
            parameters:
                - name: settlement_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/InviteMemberRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InviteMemberResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/settlements/{settlement_id}/invitations/{invitation_id}:revoke:
        post:
            tags:
                - SettlementService
            description: Revoke an invitation to a settlement (requires being the settlement leader)
            operationId: SettlementService_RevokeInvitation
            parameters:
                - name: settlement_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: invitation_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RevokeInvitationRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RevokeInvitationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/settlements/{settlement_id}/members/{user_id}:
        delete:
            tags:
                - SettlementService
            description: Remove a member from a settlement (requires admin privileges)
            operationId: SettlementService_RemoveMember
            parameters:
                - name: settlement_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: user_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveMemberResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/stats:
        get:
            tags:
                - StatsService
            description: Returns online stats
            operationId: StatsService_GetOnlineStats
            parameters:
                - name: filter
                  in: query
                  description: Stats filter. Service will return count sorted by provided filter.
                  schema:
                    type: integer
                    format: enum
                - name: started_at
                  in: query
                  description: Start time for filtering
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OnlineStatsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/user/avatar:
        post:
            tags:
                - UserService
            operationId: UserService_UpdateAvatar
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateAvatarRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/user/search:
        get:
            tags:
                - UserService
            operationId: UserService_SearchUsers
            parameters:
                - name: query
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SearchUsersResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/user/verify/{user_game_name}/status:
        get:
            tags:
                - VerificationService
            operationId: VerificationService_VerifyStatusByName
            parameters:
                - name: user_game_name
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VerifyStatusResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/user/{leader_id}/settlements:
        get:
            tags:
                - SettlementService
            operationId: SettlementService_GetByLeaderId
            parameters:
                - name: leader_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetByLeaderIdResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/user/{user_id}:
        get:
            tags:
                - UserService
            operationId: UserService_GetUser
            parameters:
                - name: user_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/users/{user_id}/settlements/invitations:
        get:
            tags:
                - SettlementService
            description: Get all invitations to a settlement belonging to a user
            operationId: SettlementService_GetUserInvitations
            parameters:
                - name: user_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserInvitationsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/users/{user_id}/verification:status:
        get:
            tags:
                - VerificationService
            description: Get user verification status
            operationId: VerificationService_VerificationStatus
            parameters:
                - name: user_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VerifyStatusResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/verification:
        post:
            tags:
                - VerificationService
            description: Submit user verification request
            operationId: VerificationService_Submit
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SubmitRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SubmitResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/verification/details:
        get:
            tags:
                - VerificationService
            description: |-
                Get user verification details
                 Possible statuses: pending, approved, rejected, verified
            operationId: VerificationService_Details
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DetailsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/verification/{user_id}/approve:
        post:
            tags:
                - VerificationService
            description: Approve user verification request, need admin privelege
            operationId: VerificationService_Approve
            parameters:
                - name: user_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApproveResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/verification/{user_id}/reject:
        post:
            tags:
                - VerificationService
            description: Reject user verification request, need admin privelege
            operationId: VerificationService_Reject
            parameters:
                - name: user_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RejectRequest_RejectReason'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RejectResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/verifications:
        get:
            tags:
                - VerificationService
            description: Returns verification requests from users, need admin privelege
            operationId: VerificationService_List
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/{name}/stats:
        get:
            tags:
                - StatsService
            description: Returns player stats
            operationId: StatsService_GetPlayerStats
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PlayerStatsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        AcceptInvitationResponse:
            type: object
            properties: {}
        ApproveRequest:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
        ApproveResponse:
            type: object
            properties: {}
        Attachment:
            required:
                - desc
                - url
            type: object
            properties:
                desc:
                    type: string
                url:
                    type: string
        CreateNewsRequest:
            type: object
            properties:
                title:
                    type: string
                content:
                    type: string
                preview:
                    type: string
                    format: bytes
        CreateQuestionRequest:
            type: object
            properties:
                question:
                    type: string
        CreateQuestionResponse:
            type: object
            properties: {}
        CreateRequest:
            required:
                - name
            type: object
            properties:
                name:
                    type: string
        CreateResponse:
            type: object
            properties:
                id:
                    type: string
        DetailsResponse:
            type: object
            properties:
                id:
                    type: string
                status:
                    type: string
                rejection_reason:
                    type: string
        GetByLeaderIdResponse:
            type: object
            properties:
                settlement:
                    $ref: '#/components/schemas/Settlement'
        GetInvitationsResponse:
            type: object
            properties:
                invitations:
                    type: array
                    items:
                        $ref: '#/components/schemas/Invitation'
        GetRandomQuestionsResponse:
            type: object
            properties:
                questions:
                    type: array
                    items:
                        $ref: '#/components/schemas/GetRandomQuestionsResponse_Question'
        GetRandomQuestionsResponse_Question:
            type: object
            properties:
                id:
                    type: string
                question:
                    type: string
            description: Represents a question about rules
        GetResponse:
            type: object
            properties:
                settlement:
                    $ref: '#/components/schemas/Settlement'
        GetUserInvitationsResponse:
            type: object
            properties:
                invitations:
                    type: array
                    items:
                        $ref: '#/components/schemas/Invitation'
        GetUserResponse:
            type: object
            properties:
                user_id:
                    type: string
                user_game_name:
                    type: string
                avatar:
                    $ref: '#/components/schemas/GetUserResponse_Image'
        GetUserResponse_Image:
            type: object
            properties:
                original:
                    type: string
                x96:
                    type: string
                x48:
                    type: string
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        Invitation:
            type: object
            properties:
                id:
                    type: string
                user_id:
                    type: string
        InviteMemberRequest:
            required:
                - settlement_id
                - user_id
            type: object
            properties:
                settlement_id:
                    type: string
                user_id:
                    type: string
        InviteMemberResponse:
            type: object
            properties: {}
        LeaderboardEntry:
            type: object
            properties:
                name:
                    type: string
                deaths:
                    type: integer
                    format: int32
                kills:
                    type: integer
                    format: int32
                hours_played:
                    type: number
                    format: float
        LeaderboardResponse:
            type: object
            properties:
                entries:
                    type: array
                    items:
                        $ref: '#/components/schemas/LeaderboardEntry'
        ListNewsResponse:
            type: object
            properties:
                news:
                    type: array
                    items:
                        $ref: '#/components/schemas/News'
                next_page_token:
                    type: string
                    description: |-
                        A token, which can be sent as `page_token` to retrieve the next page.
                         If this field is omitted, there are no subsequent pages.
        ListNotificationsResponse:
            type: object
            properties:
                notifications:
                    type: array
                    items:
                        $ref: '#/components/schemas/Notification'
                next_page_token:
                    type: string
                    description: |-
                        A token to retrieve the next page of results. Empty if there are no more
                         results.
        ListPendingResponse:
            type: object
            properties:
                settlements:
                    type: array
                    items:
                        $ref: '#/components/schemas/Settlement'
        ListResponse:
            type: object
            properties:
                settlements:
                    type: array
                    items:
                        $ref: '#/components/schemas/Settlement'
        Member:
            required:
                - user_id
            type: object
            properties:
                user_id:
                    type: string
        News:
            type: object
            properties:
                id:
                    type: string
                title:
                    type: string
                content:
                    type: string
                preview:
                    type: string
                view_count:
                    type: string
        Notification:
            required:
                - user_id
                - title
                - message
            type: object
            properties:
                id:
                    type: string
                user_id:
                    type: string
                title:
                    type: string
                message:
                    type: string
                state:
                    type: integer
                    format: enum
                created_at:
                    type: string
                    format: date-time
        OnlineStatsResponse:
            type: object
            properties:
                count:
                    type: integer
                    format: int32
        PlayerStatsResponse:
            type: object
            properties:
                name:
                    type: string
                death_count:
                    type: integer
                    format: int32
                hours_played:
                    type: number
                    format: float
                last_online:
                    type: string
                players_killed:
                    type: integer
                    format: int32
        RejectRequest:
            required:
                - id
                - rejection_reason
            type: object
            properties:
                id:
                    type: string
                rejection_reason:
                    type: string
        RejectRequest_RejectReason:
            type: object
            properties:
                rejection_reason:
                    type: string
        RejectResponse:
            type: object
            properties: {}
        RemoveMemberResponse:
            type: object
            properties: {}
        RevokeInvitationRequest:
            required:
                - settlement_id
                - invitation_id
            type: object
            properties:
                settlement_id:
                    type: string
                invitation_id:
                    type: string
        RevokeInvitationResponse:
            type: object
            properties:
                invitation_ids:
                    type: array
                    items:
                        type: string
        SearchUsersResponse:
            type: object
            properties:
                users:
                    type: array
                    items:
                        $ref: '#/components/schemas/GetUserResponse'
        Settlement:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                type:
                    type: integer
                    format: enum
                description:
                    type: string
                diplomacy:
                    type: string
                leader:
                    $ref: '#/components/schemas/Member'
                members:
                    type: array
                    items:
                        $ref: '#/components/schemas/Member'
                attachments:
                    type: array
                    items:
                        $ref: '#/components/schemas/Attachment'
                coordinates:
                    $ref: '#/components/schemas/Vector2'
                created_at:
                    type: string
                updated_at:
                    type: string
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        SubmitRequest:
            required:
                - type
                - name
                - description
                - diplomacy
                - coordinates
                - attachments
            type: object
            properties:
                type:
                    type: integer
                    format: enum
                name:
                    type: string
                description:
                    type: string
                diplomacy:
                    type: string
                coordinates:
                    $ref: '#/components/schemas/Vector2'
                attachments:
                    type: array
                    items:
                        $ref: '#/components/schemas/SubmitRequest_SubmitAttachment'
        SubmitRequest_SubmitAttachment:
            required:
                - data
                - description
            type: object
            properties:
                data:
                    type: string
                    format: bytes
                description:
                    type: string
        SubmitResponse:
            type: object
            properties: {}
        UpdateAvatarRequest:
            required:
                - avatar
            type: object
            properties:
                avatar:
                    type: string
                    format: bytes
        Vector2:
            type: object
            properties:
                x:
                    type: integer
                    format: int32
                y:
                    type: integer
                    format: int32
        VerificationStatusResponse:
            type: object
            properties:
                status:
                    type: string
                rejection_reason:
                    type: string
        VerifyStatusResponse:
            type: object
            properties:
                status:
                    type: string
tags:
    - name: LeaderboardService
      description: Represent basic leaderboard
    - name: NewsService
      description: Represents news service
    - name: NotificationService
      description: Provides methods to manage user notifications
    - name: RuleService
      description: Represents rules service
    - name: SettlementService
      description: Represents settlement management service
    - name: StatsService
      description: Represents various stats
    - name: TrademarketService
      description: Represent trademarket
    - name: UserService
      description: Represents user specific actions
    - name: VerificationService
      description: Represents verification service
