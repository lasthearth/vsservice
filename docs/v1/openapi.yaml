# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: "1"
servers:
    - url: https://api.lasthearth.ru
paths:
    /v1/items:
        post:
            tags:
                - TrademarketService
            operationId: TrademarketService_Create
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/leaderboard:
        get:
            tags:
                - LeaderboardService
            description: List of leaderboard entries.
            operationId: LeaderboardService_ListEntries
            parameters:
                - name: filter
                  in: query
                  description: Leaderboard filter. Service will return entries sorted by provided filter.
                  schema:
                    type: integer
                    format: enum
                - name: limit
                  in: query
                  description: |-
                    The maximum number of entries to return.
                     If unspecified, 25 entry will be returned.
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LeaderboardResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/rules/question:
        post:
            tags:
                - RuleService
            description: Creates a new question about rules
            operationId: RuleService_CreateQuestion
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateQuestionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateQuestionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/rules/questions:
        get:
            tags:
                - RuleService
            description: Returns random questions about rules
            operationId: RuleService_GetRandomQuestions
            parameters:
                - name: count
                  in: query
                  description: Count of questions to return, if not specified, returns 5 questions
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetRandomQuestionsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/stats:
        get:
            tags:
                - StatsService
            description: Returns online stats
            operationId: StatsService_GetOnlineStats
            parameters:
                - name: filter
                  in: query
                  description: Stats filter. Service will return count sorted by provided filter.
                  schema:
                    type: integer
                    format: enum
                - name: started_at
                  in: query
                  description: Start time for filtering
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OnlineStatsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/user/verify/code:
        get:
            tags:
                - UserService
            operationId: UserService_GetVerifyCode
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetVerifyCodeResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - UserService
            description: Used for in game user verification
            operationId: UserService_VerifyCode
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VerifyCodeRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VerifyCodeResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/user/verify/status:
        get:
            tags:
                - UserService
            operationId: UserService_VerifyStatus
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VerifyStatusResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/user/verify/{user_game_name}/status:
        get:
            tags:
                - UserService
            operationId: UserService_VerifyStatusByName
            parameters:
                - name: user_game_name
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VerifyStatusResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/verification:
        post:
            tags:
                - VerificationService
            description: Submit user verification request
            operationId: VerificationService_Submit
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SubmitRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SubmitResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/verification/details:
        get:
            tags:
                - VerificationService
            description: Get user verification details
            operationId: VerificationService_Details
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DetailsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/verification/{user_id}/approve:
        post:
            tags:
                - VerificationService
            description: Approve user verification request, need admin privelege
            operationId: VerificationService_Approve
            parameters:
                - name: user_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApproveResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/verification/{user_id}/reject:
        post:
            tags:
                - VerificationService
            description: Reject user verification request, need admin privelege
            operationId: VerificationService_Reject
            parameters:
                - name: user_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RejectRequest_RejectReason'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RejectResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/verifications:
        get:
            tags:
                - VerificationService
            description: Returns verification requests from users, need admin privelege
            operationId: VerificationService_List
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/{name}/stats:
        get:
            tags:
                - StatsService
            description: Returns player stats
            operationId: StatsService_GetPlayerStats
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PlayerStatsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        Answer:
            type: object
            properties:
                question:
                    type: string
                answer:
                    type: string
        ApproveResponse:
            type: object
            properties: {}
        CreateQuestionRequest:
            type: object
            properties:
                question:
                    type: string
        CreateQuestionResponse:
            type: object
            properties: {}
        CreateRequest:
            required:
                - name
            type: object
            properties:
                name:
                    type: string
        CreateResponse:
            type: object
            properties:
                id:
                    type: string
        DetailsResponse:
            type: object
            properties:
                id:
                    type: string
                status:
                    type: string
                rejection_reason:
                    type: string
        GetRandomQuestionsResponse:
            type: object
            properties:
                questions:
                    type: array
                    items:
                        $ref: '#/components/schemas/GetRandomQuestionsResponse_Question'
        GetRandomQuestionsResponse_Question:
            type: object
            properties:
                id:
                    type: string
                question:
                    type: string
            description: Represents a question about rules
        GetVerifyCodeResponse:
            type: object
            properties:
                code:
                    type: string
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        LeaderboardEntry:
            type: object
            properties:
                name:
                    type: string
                deaths:
                    type: integer
                    format: int32
                kills:
                    type: integer
                    format: int32
                hours_played:
                    type: number
                    format: float
        LeaderboardResponse:
            type: object
            properties:
                entries:
                    type: array
                    items:
                        $ref: '#/components/schemas/LeaderboardEntry'
        ListResponse:
            type: object
            properties:
                requests:
                    type: array
                    items:
                        $ref: '#/components/schemas/ListResponse_VerifyUserRequest'
        ListResponse_VerifyUserRequest:
            type: object
            properties:
                id:
                    type: string
                user_id:
                    type: string
                user_name:
                    type: string
                user_game_name:
                    type: string
                contacts:
                    type: string
                answers:
                    type: array
                    items:
                        $ref: '#/components/schemas/Answer'
        OnlineStatsResponse:
            type: object
            properties:
                count:
                    type: integer
                    format: int32
        PlayerStatsResponse:
            type: object
            properties:
                name:
                    type: string
                death_count:
                    type: integer
                    format: int32
                hours_played:
                    type: number
                    format: float
                last_online:
                    type: string
                players_killed:
                    type: integer
                    format: int32
        RejectRequest_RejectReason:
            type: object
            properties:
                rejection_reason:
                    type: string
        RejectResponse:
            type: object
            properties: {}
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        SubmitRequest:
            required:
                - user_name
                - user_game_name
                - contacts
                - answers
            type: object
            properties:
                user_name:
                    type: string
                user_game_name:
                    type: string
                contacts:
                    type: string
                answers:
                    type: array
                    items:
                        $ref: '#/components/schemas/Answer'
        SubmitResponse:
            type: object
            properties: {}
        VerifyCodeRequest:
            required:
                - code
                - user_game_name
            type: object
            properties:
                code:
                    type: string
                user_game_name:
                    type: string
        VerifyCodeResponse:
            type: object
            properties: {}
        VerifyStatusResponse:
            type: object
            properties:
                status:
                    type: string
tags:
    - name: LeaderboardService
      description: Represent basic leaderboard
    - name: RuleService
      description: Represents rules service
    - name: StatsService
      description: Represents various stats
    - name: TrademarketService
      description: Represent trademarket
    - name: UserService
      description: Represents user specific actions
    - name: VerificationService
      description: Represents verification service
