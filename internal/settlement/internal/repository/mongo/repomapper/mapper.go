// Code generated by github.com/jmattheis/goverter, DO NOT EDIT.
//go:build !goverter

package repomapper

import (
	goverter "github.com/lasthearth/vsservice/internal/pkg/goverter"
	invitation "github.com/lasthearth/vsservice/internal/settlement/internal/dto/mongo/invitation"
	model "github.com/lasthearth/vsservice/internal/settlement/model"
)

type MapperImpl struct{}

func (c *MapperImpl) FromInvModel(source model.Invitation) invitation.Invitation {
	var invitationdtoInvitation invitation.Invitation
	invitationdtoInvitation.UserId = source.UserId
	invitationdtoInvitation.SettlementId = source.SettlementId
	return invitationdtoInvitation
}
func (c *MapperImpl) FromInvModels(source []model.Invitation) []invitation.Invitation {
	var invitationdtoInvitationList []invitation.Invitation
	if source != nil {
		invitationdtoInvitationList = make([]invitation.Invitation, len(source))
		for i := 0; i < len(source); i++ {
			invitationdtoInvitationList[i] = c.FromInvModel(source[i])
		}
	}
	return invitationdtoInvitationList
}
func (c *MapperImpl) ToInvModel(source invitation.Invitation) model.Invitation {
	var modelInvitation model.Invitation
	modelInvitation.Id = goverter.ObjectIdToString(source.Id)
	modelInvitation.UserId = source.UserId
	modelInvitation.SettlementId = source.SettlementId
	return modelInvitation
}
func (c *MapperImpl) ToInvModels(source []invitation.Invitation) []model.Invitation {
	var modelInvitationList []model.Invitation
	if source != nil {
		modelInvitationList = make([]model.Invitation, len(source))
		for i := 0; i < len(source); i++ {
			modelInvitationList[i] = c.ToInvModel(source[i])
		}
	}
	return modelInvitationList
}
