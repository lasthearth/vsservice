// Code generated by github.com/jmattheis/goverter, DO NOT EDIT.
//go:build !goverter

package repomapper

import (
	dto "github.com/lasthearth/vsservice/internal/news/internal/dto"
	model "github.com/lasthearth/vsservice/internal/news/internal/model"
	goverter "github.com/lasthearth/vsservice/internal/pkg/goverter"
)

type MapperImpl struct{}

func (c *MapperImpl) FromModel(source model.News) dto.News {
	var dtoNews dto.News
	dtoNews.Title = source.Title
	dtoNews.Preview = source.Preview
	dtoNews.Content = source.Content
	return dtoNews
}
func (c *MapperImpl) FromModels(source []model.News) []dto.News {
	var dtoNewsList []dto.News
	if source != nil {
		dtoNewsList = make([]dto.News, len(source))
		for i := 0; i < len(source); i++ {
			dtoNewsList[i] = c.FromModel(source[i])
		}
	}
	return dtoNewsList
}
func (c *MapperImpl) ToModel(source dto.News) model.News {
	var modelNews model.News
	modelNews.Id = goverter.ObjectIdToString(source.Model.Id)
	modelNews.Title = source.Title
	modelNews.Preview = source.Preview
	modelNews.Content = source.Content
	modelNews.CreatedAt = goverter.TimeToTime(source.Model.CreatedAt)
	return modelNews
}
func (c *MapperImpl) ToModels(source []dto.News) []model.News {
	var modelNewsList []model.News
	if source != nil {
		modelNewsList = make([]model.News, len(source))
		for i := 0; i < len(source); i++ {
			modelNewsList[i] = c.ToModel(source[i])
		}
	}
	return modelNewsList
}
