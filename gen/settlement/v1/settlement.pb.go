// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: settlement/v1/settlement.proto

package settlementv1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SettlementType int32

const (
	SettlementType_SETTLEMENT_TYPE_UNSPECIFIED SettlementType = 0
	SettlementType_CAMP                        SettlementType = 1
	SettlementType_VILLAGE                     SettlementType = 2
	SettlementType_CITY                        SettlementType = 3
	SettlementType_PROVINCE                    SettlementType = 4
	SettlementType_GUILD                       SettlementType = 5
	SettlementType_GUILD_LVL2                  SettlementType = 6
	SettlementType_ORDEN                       SettlementType = 7
)

// Enum value maps for SettlementType.
var (
	SettlementType_name = map[int32]string{
		0: "SETTLEMENT_TYPE_UNSPECIFIED",
		1: "CAMP",
		2: "VILLAGE",
		3: "CITY",
		4: "PROVINCE",
		5: "GUILD",
		6: "GUILD_LVL2",
		7: "ORDEN",
	}
	SettlementType_value = map[string]int32{
		"SETTLEMENT_TYPE_UNSPECIFIED": 0,
		"CAMP":                        1,
		"VILLAGE":                     2,
		"CITY":                        3,
		"PROVINCE":                    4,
		"GUILD":                       5,
		"GUILD_LVL2":                  6,
		"ORDEN":                       7,
	}
)

func (x SettlementType) Enum() *SettlementType {
	p := new(SettlementType)
	*p = x
	return p
}

func (x SettlementType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SettlementType) Descriptor() protoreflect.EnumDescriptor {
	return file_settlement_v1_settlement_proto_enumTypes[0].Descriptor()
}

func (SettlementType) Type() protoreflect.EnumType {
	return &file_settlement_v1_settlement_proto_enumTypes[0]
}

func (x SettlementType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SettlementType.Descriptor instead.
func (SettlementType) EnumDescriptor() ([]byte, []int) {
	return file_settlement_v1_settlement_proto_rawDescGZIP(), []int{0}
}

type SubmitRequest_Type int32

const (
	SubmitRequest_TYPE_UNSPECIFIED SubmitRequest_Type = 0
	SubmitRequest_CAMP             SubmitRequest_Type = 1
	SubmitRequest_GUILD            SubmitRequest_Type = 2
	SubmitRequest_ORDEN            SubmitRequest_Type = 3
)

// Enum value maps for SubmitRequest_Type.
var (
	SubmitRequest_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "CAMP",
		2: "GUILD",
		3: "ORDEN",
	}
	SubmitRequest_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"CAMP":             1,
		"GUILD":            2,
		"ORDEN":            3,
	}
)

func (x SubmitRequest_Type) Enum() *SubmitRequest_Type {
	p := new(SubmitRequest_Type)
	*p = x
	return p
}

func (x SubmitRequest_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubmitRequest_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_settlement_v1_settlement_proto_enumTypes[1].Descriptor()
}

func (SubmitRequest_Type) Type() protoreflect.EnumType {
	return &file_settlement_v1_settlement_proto_enumTypes[1]
}

func (x SubmitRequest_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubmitRequest_Type.Descriptor instead.
func (SubmitRequest_Type) EnumDescriptor() ([]byte, []int) {
	return file_settlement_v1_settlement_proto_rawDescGZIP(), []int{2, 0}
}

type Settlement struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type          SettlementType         `protobuf:"varint,3,opt,name=type,proto3,enum=settlement.v1.SettlementType" json:"type,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Diplomacy     string                 `protobuf:"bytes,5,opt,name=diplomacy,proto3" json:"diplomacy,omitempty"`
	Leader        *Member                `protobuf:"bytes,6,opt,name=leader,proto3" json:"leader,omitempty"`
	Members       []*Member              `protobuf:"bytes,7,rep,name=members,proto3" json:"members,omitempty"`
	Attachments   []*Attachment          `protobuf:"bytes,8,rep,name=attachments,proto3" json:"attachments,omitempty"`
	Coordinates   *Vector2               `protobuf:"bytes,9,opt,name=coordinates,proto3" json:"coordinates,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     int64                  `protobuf:"varint,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Settlement) Reset() {
	*x = Settlement{}
	mi := &file_settlement_v1_settlement_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Settlement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Settlement) ProtoMessage() {}

func (x *Settlement) ProtoReflect() protoreflect.Message {
	mi := &file_settlement_v1_settlement_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Settlement.ProtoReflect.Descriptor instead.
func (*Settlement) Descriptor() ([]byte, []int) {
	return file_settlement_v1_settlement_proto_rawDescGZIP(), []int{0}
}

func (x *Settlement) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Settlement) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Settlement) GetType() SettlementType {
	if x != nil {
		return x.Type
	}
	return SettlementType_SETTLEMENT_TYPE_UNSPECIFIED
}

func (x *Settlement) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Settlement) GetDiplomacy() string {
	if x != nil {
		return x.Diplomacy
	}
	return ""
}

func (x *Settlement) GetLeader() *Member {
	if x != nil {
		return x.Leader
	}
	return nil
}

func (x *Settlement) GetMembers() []*Member {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *Settlement) GetAttachments() []*Attachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *Settlement) GetCoordinates() *Vector2 {
	if x != nil {
		return x.Coordinates
	}
	return nil
}

func (x *Settlement) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Settlement) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type Member struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Member) Reset() {
	*x = Member{}
	mi := &file_settlement_v1_settlement_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Member) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Member) ProtoMessage() {}

func (x *Member) ProtoReflect() protoreflect.Message {
	mi := &file_settlement_v1_settlement_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Member.ProtoReflect.Descriptor instead.
func (*Member) Descriptor() ([]byte, []int) {
	return file_settlement_v1_settlement_proto_rawDescGZIP(), []int{1}
}

func (x *Member) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type SubmitRequest struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Type          SubmitRequest_Type                `protobuf:"varint,1,opt,name=type,proto3,enum=settlement.v1.SubmitRequest_Type" json:"type,omitempty"`
	Name          string                            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                            `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Diplomacy     string                            `protobuf:"bytes,4,opt,name=diplomacy,proto3" json:"diplomacy,omitempty"`
	Coordinates   *Vector2                          `protobuf:"bytes,5,opt,name=coordinates,proto3" json:"coordinates,omitempty"`
	Attachments   []*SubmitRequest_SubmitAttachment `protobuf:"bytes,6,rep,name=attachments,proto3" json:"attachments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitRequest) Reset() {
	*x = SubmitRequest{}
	mi := &file_settlement_v1_settlement_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitRequest) ProtoMessage() {}

func (x *SubmitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settlement_v1_settlement_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitRequest.ProtoReflect.Descriptor instead.
func (*SubmitRequest) Descriptor() ([]byte, []int) {
	return file_settlement_v1_settlement_proto_rawDescGZIP(), []int{2}
}

func (x *SubmitRequest) GetType() SubmitRequest_Type {
	if x != nil {
		return x.Type
	}
	return SubmitRequest_TYPE_UNSPECIFIED
}

func (x *SubmitRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SubmitRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SubmitRequest) GetDiplomacy() string {
	if x != nil {
		return x.Diplomacy
	}
	return ""
}

func (x *SubmitRequest) GetCoordinates() *Vector2 {
	if x != nil {
		return x.Coordinates
	}
	return nil
}

func (x *SubmitRequest) GetAttachments() []*SubmitRequest_SubmitAttachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

type Vector2 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             int32                  `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y             int32                  `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Vector2) Reset() {
	*x = Vector2{}
	mi := &file_settlement_v1_settlement_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Vector2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vector2) ProtoMessage() {}

func (x *Vector2) ProtoReflect() protoreflect.Message {
	mi := &file_settlement_v1_settlement_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vector2.ProtoReflect.Descriptor instead.
func (*Vector2) Descriptor() ([]byte, []int) {
	return file_settlement_v1_settlement_proto_rawDescGZIP(), []int{3}
}

func (x *Vector2) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Vector2) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type Attachment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Desc          string                 `protobuf:"bytes,1,opt,name=desc,proto3" json:"desc,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Attachment) Reset() {
	*x = Attachment{}
	mi := &file_settlement_v1_settlement_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attachment) ProtoMessage() {}

func (x *Attachment) ProtoReflect() protoreflect.Message {
	mi := &file_settlement_v1_settlement_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attachment.ProtoReflect.Descriptor instead.
func (*Attachment) Descriptor() ([]byte, []int) {
	return file_settlement_v1_settlement_proto_rawDescGZIP(), []int{4}
}

func (x *Attachment) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Attachment) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type SubmitResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitResponse) Reset() {
	*x = SubmitResponse{}
	mi := &file_settlement_v1_settlement_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitResponse) ProtoMessage() {}

func (x *SubmitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_settlement_v1_settlement_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitResponse.ProtoReflect.Descriptor instead.
func (*SubmitResponse) Descriptor() ([]byte, []int) {
	return file_settlement_v1_settlement_proto_rawDescGZIP(), []int{5}
}

type GetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	mi := &file_settlement_v1_settlement_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settlement_v1_settlement_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_settlement_v1_settlement_proto_rawDescGZIP(), []int{6}
}

func (x *GetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Settlement    *Settlement            `protobuf:"bytes,1,opt,name=settlement,proto3" json:"settlement,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	mi := &file_settlement_v1_settlement_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_settlement_v1_settlement_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_settlement_v1_settlement_proto_rawDescGZIP(), []int{7}
}

func (x *GetResponse) GetSettlement() *Settlement {
	if x != nil {
		return x.Settlement
	}
	return nil
}

type ListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	mi := &file_settlement_v1_settlement_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settlement_v1_settlement_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_settlement_v1_settlement_proto_rawDescGZIP(), []int{8}
}

type ListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Settlements   []*Settlement          `protobuf:"bytes,1,rep,name=settlements,proto3" json:"settlements,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListResponse) Reset() {
	*x = ListResponse{}
	mi := &file_settlement_v1_settlement_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponse) ProtoMessage() {}

func (x *ListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_settlement_v1_settlement_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponse.ProtoReflect.Descriptor instead.
func (*ListResponse) Descriptor() ([]byte, []int) {
	return file_settlement_v1_settlement_proto_rawDescGZIP(), []int{9}
}

func (x *ListResponse) GetSettlements() []*Settlement {
	if x != nil {
		return x.Settlements
	}
	return nil
}

type ListPendingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPendingRequest) Reset() {
	*x = ListPendingRequest{}
	mi := &file_settlement_v1_settlement_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPendingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPendingRequest) ProtoMessage() {}

func (x *ListPendingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settlement_v1_settlement_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPendingRequest.ProtoReflect.Descriptor instead.
func (*ListPendingRequest) Descriptor() ([]byte, []int) {
	return file_settlement_v1_settlement_proto_rawDescGZIP(), []int{10}
}

type ListPendingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Settlements   []*Settlement          `protobuf:"bytes,1,rep,name=settlements,proto3" json:"settlements,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPendingResponse) Reset() {
	*x = ListPendingResponse{}
	mi := &file_settlement_v1_settlement_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPendingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPendingResponse) ProtoMessage() {}

func (x *ListPendingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_settlement_v1_settlement_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPendingResponse.ProtoReflect.Descriptor instead.
func (*ListPendingResponse) Descriptor() ([]byte, []int) {
	return file_settlement_v1_settlement_proto_rawDescGZIP(), []int{11}
}

func (x *ListPendingResponse) GetSettlements() []*Settlement {
	if x != nil {
		return x.Settlements
	}
	return nil
}

type ApproveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApproveRequest) Reset() {
	*x = ApproveRequest{}
	mi := &file_settlement_v1_settlement_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApproveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveRequest) ProtoMessage() {}

func (x *ApproveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settlement_v1_settlement_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveRequest.ProtoReflect.Descriptor instead.
func (*ApproveRequest) Descriptor() ([]byte, []int) {
	return file_settlement_v1_settlement_proto_rawDescGZIP(), []int{12}
}

func (x *ApproveRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ApproveResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApproveResponse) Reset() {
	*x = ApproveResponse{}
	mi := &file_settlement_v1_settlement_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApproveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveResponse) ProtoMessage() {}

func (x *ApproveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_settlement_v1_settlement_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveResponse.ProtoReflect.Descriptor instead.
func (*ApproveResponse) Descriptor() ([]byte, []int) {
	return file_settlement_v1_settlement_proto_rawDescGZIP(), []int{13}
}

type RejectRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RejectionReason string                 `protobuf:"bytes,2,opt,name=rejection_reason,json=rejectionReason,proto3" json:"rejection_reason,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RejectRequest) Reset() {
	*x = RejectRequest{}
	mi := &file_settlement_v1_settlement_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RejectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectRequest) ProtoMessage() {}

func (x *RejectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settlement_v1_settlement_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectRequest.ProtoReflect.Descriptor instead.
func (*RejectRequest) Descriptor() ([]byte, []int) {
	return file_settlement_v1_settlement_proto_rawDescGZIP(), []int{14}
}

func (x *RejectRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RejectRequest) GetRejectionReason() string {
	if x != nil {
		return x.RejectionReason
	}
	return ""
}

type RejectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RejectResponse) Reset() {
	*x = RejectResponse{}
	mi := &file_settlement_v1_settlement_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RejectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectResponse) ProtoMessage() {}

func (x *RejectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_settlement_v1_settlement_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectResponse.ProtoReflect.Descriptor instead.
func (*RejectResponse) Descriptor() ([]byte, []int) {
	return file_settlement_v1_settlement_proto_rawDescGZIP(), []int{15}
}

type RemoveMemberRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SettlementId  string                 `protobuf:"bytes,1,opt,name=settlement_id,json=settlementId,proto3" json:"settlement_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveMemberRequest) Reset() {
	*x = RemoveMemberRequest{}
	mi := &file_settlement_v1_settlement_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMemberRequest) ProtoMessage() {}

func (x *RemoveMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settlement_v1_settlement_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMemberRequest.ProtoReflect.Descriptor instead.
func (*RemoveMemberRequest) Descriptor() ([]byte, []int) {
	return file_settlement_v1_settlement_proto_rawDescGZIP(), []int{16}
}

func (x *RemoveMemberRequest) GetSettlementId() string {
	if x != nil {
		return x.SettlementId
	}
	return ""
}

func (x *RemoveMemberRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type RemoveMemberResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveMemberResponse) Reset() {
	*x = RemoveMemberResponse{}
	mi := &file_settlement_v1_settlement_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMemberResponse) ProtoMessage() {}

func (x *RemoveMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_settlement_v1_settlement_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMemberResponse.ProtoReflect.Descriptor instead.
func (*RemoveMemberResponse) Descriptor() ([]byte, []int) {
	return file_settlement_v1_settlement_proto_rawDescGZIP(), []int{17}
}

type InviteMemberRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SettlementId  string                 `protobuf:"bytes,1,opt,name=settlement_id,json=settlementId,proto3" json:"settlement_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InviteMemberRequest) Reset() {
	*x = InviteMemberRequest{}
	mi := &file_settlement_v1_settlement_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InviteMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteMemberRequest) ProtoMessage() {}

func (x *InviteMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settlement_v1_settlement_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteMemberRequest.ProtoReflect.Descriptor instead.
func (*InviteMemberRequest) Descriptor() ([]byte, []int) {
	return file_settlement_v1_settlement_proto_rawDescGZIP(), []int{18}
}

func (x *InviteMemberRequest) GetSettlementId() string {
	if x != nil {
		return x.SettlementId
	}
	return ""
}

func (x *InviteMemberRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type InviteMemberResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InviteMemberResponse) Reset() {
	*x = InviteMemberResponse{}
	mi := &file_settlement_v1_settlement_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InviteMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteMemberResponse) ProtoMessage() {}

func (x *InviteMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_settlement_v1_settlement_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteMemberResponse.ProtoReflect.Descriptor instead.
func (*InviteMemberResponse) Descriptor() ([]byte, []int) {
	return file_settlement_v1_settlement_proto_rawDescGZIP(), []int{19}
}

type GetInvitationsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SettlementId  string                 `protobuf:"bytes,1,opt,name=settlement_id,json=settlementId,proto3" json:"settlement_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetInvitationsRequest) Reset() {
	*x = GetInvitationsRequest{}
	mi := &file_settlement_v1_settlement_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInvitationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvitationsRequest) ProtoMessage() {}

func (x *GetInvitationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settlement_v1_settlement_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInvitationsRequest.ProtoReflect.Descriptor instead.
func (*GetInvitationsRequest) Descriptor() ([]byte, []int) {
	return file_settlement_v1_settlement_proto_rawDescGZIP(), []int{20}
}

func (x *GetInvitationsRequest) GetSettlementId() string {
	if x != nil {
		return x.SettlementId
	}
	return ""
}

type GetInvitationsResponse struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Invitations   []*GetInvitationsResponse_Invitation `protobuf:"bytes,1,rep,name=invitations,proto3" json:"invitations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetInvitationsResponse) Reset() {
	*x = GetInvitationsResponse{}
	mi := &file_settlement_v1_settlement_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInvitationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvitationsResponse) ProtoMessage() {}

func (x *GetInvitationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_settlement_v1_settlement_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInvitationsResponse.ProtoReflect.Descriptor instead.
func (*GetInvitationsResponse) Descriptor() ([]byte, []int) {
	return file_settlement_v1_settlement_proto_rawDescGZIP(), []int{21}
}

func (x *GetInvitationsResponse) GetInvitations() []*GetInvitationsResponse_Invitation {
	if x != nil {
		return x.Invitations
	}
	return nil
}

type RevokeInvitationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SettlementId  string                 `protobuf:"bytes,1,opt,name=settlement_id,json=settlementId,proto3" json:"settlement_id,omitempty"`
	InvitationId  string                 `protobuf:"bytes,2,opt,name=invitation_id,json=invitationId,proto3" json:"invitation_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevokeInvitationRequest) Reset() {
	*x = RevokeInvitationRequest{}
	mi := &file_settlement_v1_settlement_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeInvitationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeInvitationRequest) ProtoMessage() {}

func (x *RevokeInvitationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settlement_v1_settlement_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeInvitationRequest.ProtoReflect.Descriptor instead.
func (*RevokeInvitationRequest) Descriptor() ([]byte, []int) {
	return file_settlement_v1_settlement_proto_rawDescGZIP(), []int{22}
}

func (x *RevokeInvitationRequest) GetSettlementId() string {
	if x != nil {
		return x.SettlementId
	}
	return ""
}

func (x *RevokeInvitationRequest) GetInvitationId() string {
	if x != nil {
		return x.InvitationId
	}
	return ""
}

type RevokeInvitationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InvitationIds []string               `protobuf:"bytes,1,rep,name=invitation_ids,json=invitationIds,proto3" json:"invitation_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevokeInvitationResponse) Reset() {
	*x = RevokeInvitationResponse{}
	mi := &file_settlement_v1_settlement_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeInvitationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeInvitationResponse) ProtoMessage() {}

func (x *RevokeInvitationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_settlement_v1_settlement_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeInvitationResponse.ProtoReflect.Descriptor instead.
func (*RevokeInvitationResponse) Descriptor() ([]byte, []int) {
	return file_settlement_v1_settlement_proto_rawDescGZIP(), []int{23}
}

func (x *RevokeInvitationResponse) GetInvitationIds() []string {
	if x != nil {
		return x.InvitationIds
	}
	return nil
}

type GetByLeaderIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LeaderId      string                 `protobuf:"bytes,1,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetByLeaderIdRequest) Reset() {
	*x = GetByLeaderIdRequest{}
	mi := &file_settlement_v1_settlement_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetByLeaderIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByLeaderIdRequest) ProtoMessage() {}

func (x *GetByLeaderIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settlement_v1_settlement_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByLeaderIdRequest.ProtoReflect.Descriptor instead.
func (*GetByLeaderIdRequest) Descriptor() ([]byte, []int) {
	return file_settlement_v1_settlement_proto_rawDescGZIP(), []int{24}
}

func (x *GetByLeaderIdRequest) GetLeaderId() string {
	if x != nil {
		return x.LeaderId
	}
	return ""
}

type GetByLeaderIdResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Settlement    *Settlement            `protobuf:"bytes,1,opt,name=settlement,proto3" json:"settlement,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetByLeaderIdResponse) Reset() {
	*x = GetByLeaderIdResponse{}
	mi := &file_settlement_v1_settlement_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetByLeaderIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByLeaderIdResponse) ProtoMessage() {}

func (x *GetByLeaderIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_settlement_v1_settlement_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByLeaderIdResponse.ProtoReflect.Descriptor instead.
func (*GetByLeaderIdResponse) Descriptor() ([]byte, []int) {
	return file_settlement_v1_settlement_proto_rawDescGZIP(), []int{25}
}

func (x *GetByLeaderIdResponse) GetSettlement() *Settlement {
	if x != nil {
		return x.Settlement
	}
	return nil
}

type SubmitRequest_SubmitAttachment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitRequest_SubmitAttachment) Reset() {
	*x = SubmitRequest_SubmitAttachment{}
	mi := &file_settlement_v1_settlement_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitRequest_SubmitAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitRequest_SubmitAttachment) ProtoMessage() {}

func (x *SubmitRequest_SubmitAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_settlement_v1_settlement_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitRequest_SubmitAttachment.ProtoReflect.Descriptor instead.
func (*SubmitRequest_SubmitAttachment) Descriptor() ([]byte, []int) {
	return file_settlement_v1_settlement_proto_rawDescGZIP(), []int{2, 0}
}

func (x *SubmitRequest_SubmitAttachment) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SubmitRequest_SubmitAttachment) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type GetInvitationsResponse_Invitation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetInvitationsResponse_Invitation) Reset() {
	*x = GetInvitationsResponse_Invitation{}
	mi := &file_settlement_v1_settlement_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInvitationsResponse_Invitation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvitationsResponse_Invitation) ProtoMessage() {}

func (x *GetInvitationsResponse_Invitation) ProtoReflect() protoreflect.Message {
	mi := &file_settlement_v1_settlement_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInvitationsResponse_Invitation.ProtoReflect.Descriptor instead.
func (*GetInvitationsResponse_Invitation) Descriptor() ([]byte, []int) {
	return file_settlement_v1_settlement_proto_rawDescGZIP(), []int{21, 0}
}

func (x *GetInvitationsResponse_Invitation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetInvitationsResponse_Invitation) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

var File_settlement_v1_settlement_proto protoreflect.FileDescriptor

var file_settlement_v1_settlement_proto_rawDesc = string([]byte{
	0x0a, 0x1e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0d, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb8, 0x03, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x64, 0x69, 0x70, 0x6c, 0x6f, 0x6d, 0x61, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x64, 0x69, 0x70, 0x6c, 0x6f, 0x6d, 0x61, 0x63, 0x79, 0x12, 0x2d, 0x0a, 0x06, 0x6c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x07, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x38, 0x0a, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x32, 0x52, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x26, 0x0a, 0x06, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xd5, 0x03, 0x0a, 0x0d, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x09, 0x64, 0x69, 0x70, 0x6c, 0x6f, 0x6d, 0x61,
	0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x64,
	0x69, 0x70, 0x6c, 0x6f, 0x6d, 0x61, 0x63, 0x79, 0x12, 0x3d, 0x0a, 0x0b, 0x63, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x32, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x63, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x12, 0x54, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x02,
	0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x52, 0x0a,
	0x10, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x17, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42,
	0x03, 0xe0, 0x41, 0x02, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x3c, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x43, 0x41, 0x4d, 0x50, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x55, 0x49,
	0x4c, 0x44, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x52, 0x44, 0x45, 0x4e, 0x10, 0x03, 0x22,
	0x25, 0x0a, 0x07, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x32, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x01, 0x79, 0x22, 0x3c, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x15, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x22, 0x10, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x02, 0x69, 0x64, 0x22, 0x48, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x22, 0x0d, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x4b, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x0b, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22,
	0x14, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x52, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0b,
	0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x73, 0x65,
	0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x25, 0x0a, 0x0e, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x13, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x11, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x54, 0x0a, 0x0d, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x10, 0x72, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0f, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x10, 0x0a, 0x0e, 0x52, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5d, 0x0a, 0x13, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x28, 0x0a, 0x0d, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0c,
	0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x5d, 0x0a, 0x13, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0d, 0x73, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0c, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x16, 0x0a, 0x14, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x28, 0x0a, 0x0d, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0c,
	0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xa3, 0x01, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x35, 0x0a, 0x0a, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x6d, 0x0a, 0x17, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a,
	0x0d, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0c, 0x73, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x0c, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x41, 0x0a, 0x18, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x73, 0x22, 0x38, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x09,
	0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x03, 0xe0, 0x41, 0x02, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x52,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2a, 0x86, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x45, 0x54, 0x54, 0x4c, 0x45, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x41, 0x4d, 0x50, 0x10, 0x01,
	0x12, 0x0b, 0x0a, 0x07, 0x56, 0x49, 0x4c, 0x4c, 0x41, 0x47, 0x45, 0x10, 0x02, 0x12, 0x08, 0x0a,
	0x04, 0x43, 0x49, 0x54, 0x59, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x52, 0x4f, 0x56, 0x49,
	0x4e, 0x43, 0x45, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x55, 0x49, 0x4c, 0x44, 0x10, 0x05,
	0x12, 0x0e, 0x0a, 0x0a, 0x47, 0x55, 0x49, 0x4c, 0x44, 0x5f, 0x4c, 0x56, 0x4c, 0x32, 0x10, 0x06,
	0x12, 0x09, 0x0a, 0x05, 0x4f, 0x52, 0x44, 0x45, 0x4e, 0x10, 0x07, 0x32, 0x93, 0x0b, 0x0a, 0x11,
	0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x61, 0x0a, 0x06, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x12, 0x1c, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14,
	0x3a, 0x01, 0x2a, 0x22, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x5a, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x19, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x12, 0x84, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x23, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12, 0x20, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f,
	0x7b, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x73, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x58, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1a, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11,
	0x12, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x75, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x12, 0x21, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12,
	0x17, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x71, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a, 0x22, 0x1c, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x2f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x12, 0x6d, 0x0a, 0x06, 0x52,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x2f, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x92, 0x01, 0x0a, 0x0c, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x2a, 0x31, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x73,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x12,
	0x92, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x24, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x12, 0x2b, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x8f, 0x01, 0x0a, 0x0c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x3a, 0x01, 0x2a, 0x22, 0x2b, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x73, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0xb2, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x76, 0x6f, 0x6b,
	0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x6f,
	0x6b, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4d, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x47, 0x3a, 0x01, 0x2a, 0x22, 0x42, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x1a, 0x14, 0xca, 0x41, 0x11,
	0x61, 0x70, 0x69, 0x2e, 0x6c, 0x61, 0x73, 0x74, 0x68, 0x65, 0x61, 0x72, 0x74, 0x68, 0x2e, 0x72,
	0x75, 0x42, 0xb9, 0x01, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x42, 0x0f, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x61, 0x73, 0x74, 0x68, 0x65, 0x61, 0x72, 0x74,
	0x68, 0x2f, 0x76, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x67, 0x65, 0x6e, 0x2f,
	0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x73, 0x65,
	0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x53, 0x58, 0x58,
	0xaa, 0x02, 0x0d, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x56, 0x31,
	0xca, 0x02, 0x0d, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5c, 0x56, 0x31,
	0xe2, 0x02, 0x19, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5c, 0x56, 0x31,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0e, 0x53,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_settlement_v1_settlement_proto_rawDescOnce sync.Once
	file_settlement_v1_settlement_proto_rawDescData []byte
)

func file_settlement_v1_settlement_proto_rawDescGZIP() []byte {
	file_settlement_v1_settlement_proto_rawDescOnce.Do(func() {
		file_settlement_v1_settlement_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_settlement_v1_settlement_proto_rawDesc), len(file_settlement_v1_settlement_proto_rawDesc)))
	})
	return file_settlement_v1_settlement_proto_rawDescData
}

var file_settlement_v1_settlement_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_settlement_v1_settlement_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_settlement_v1_settlement_proto_goTypes = []any{
	(SettlementType)(0),                       // 0: settlement.v1.SettlementType
	(SubmitRequest_Type)(0),                   // 1: settlement.v1.SubmitRequest.Type
	(*Settlement)(nil),                        // 2: settlement.v1.Settlement
	(*Member)(nil),                            // 3: settlement.v1.Member
	(*SubmitRequest)(nil),                     // 4: settlement.v1.SubmitRequest
	(*Vector2)(nil),                           // 5: settlement.v1.Vector2
	(*Attachment)(nil),                        // 6: settlement.v1.Attachment
	(*SubmitResponse)(nil),                    // 7: settlement.v1.SubmitResponse
	(*GetRequest)(nil),                        // 8: settlement.v1.GetRequest
	(*GetResponse)(nil),                       // 9: settlement.v1.GetResponse
	(*ListRequest)(nil),                       // 10: settlement.v1.ListRequest
	(*ListResponse)(nil),                      // 11: settlement.v1.ListResponse
	(*ListPendingRequest)(nil),                // 12: settlement.v1.ListPendingRequest
	(*ListPendingResponse)(nil),               // 13: settlement.v1.ListPendingResponse
	(*ApproveRequest)(nil),                    // 14: settlement.v1.ApproveRequest
	(*ApproveResponse)(nil),                   // 15: settlement.v1.ApproveResponse
	(*RejectRequest)(nil),                     // 16: settlement.v1.RejectRequest
	(*RejectResponse)(nil),                    // 17: settlement.v1.RejectResponse
	(*RemoveMemberRequest)(nil),               // 18: settlement.v1.RemoveMemberRequest
	(*RemoveMemberResponse)(nil),              // 19: settlement.v1.RemoveMemberResponse
	(*InviteMemberRequest)(nil),               // 20: settlement.v1.InviteMemberRequest
	(*InviteMemberResponse)(nil),              // 21: settlement.v1.InviteMemberResponse
	(*GetInvitationsRequest)(nil),             // 22: settlement.v1.GetInvitationsRequest
	(*GetInvitationsResponse)(nil),            // 23: settlement.v1.GetInvitationsResponse
	(*RevokeInvitationRequest)(nil),           // 24: settlement.v1.RevokeInvitationRequest
	(*RevokeInvitationResponse)(nil),          // 25: settlement.v1.RevokeInvitationResponse
	(*GetByLeaderIdRequest)(nil),              // 26: settlement.v1.GetByLeaderIdRequest
	(*GetByLeaderIdResponse)(nil),             // 27: settlement.v1.GetByLeaderIdResponse
	(*SubmitRequest_SubmitAttachment)(nil),    // 28: settlement.v1.SubmitRequest.SubmitAttachment
	(*GetInvitationsResponse_Invitation)(nil), // 29: settlement.v1.GetInvitationsResponse.Invitation
}
var file_settlement_v1_settlement_proto_depIdxs = []int32{
	0,  // 0: settlement.v1.Settlement.type:type_name -> settlement.v1.SettlementType
	3,  // 1: settlement.v1.Settlement.leader:type_name -> settlement.v1.Member
	3,  // 2: settlement.v1.Settlement.members:type_name -> settlement.v1.Member
	6,  // 3: settlement.v1.Settlement.attachments:type_name -> settlement.v1.Attachment
	5,  // 4: settlement.v1.Settlement.coordinates:type_name -> settlement.v1.Vector2
	1,  // 5: settlement.v1.SubmitRequest.type:type_name -> settlement.v1.SubmitRequest.Type
	5,  // 6: settlement.v1.SubmitRequest.coordinates:type_name -> settlement.v1.Vector2
	28, // 7: settlement.v1.SubmitRequest.attachments:type_name -> settlement.v1.SubmitRequest.SubmitAttachment
	2,  // 8: settlement.v1.GetResponse.settlement:type_name -> settlement.v1.Settlement
	2,  // 9: settlement.v1.ListResponse.settlements:type_name -> settlement.v1.Settlement
	2,  // 10: settlement.v1.ListPendingResponse.settlements:type_name -> settlement.v1.Settlement
	29, // 11: settlement.v1.GetInvitationsResponse.invitations:type_name -> settlement.v1.GetInvitationsResponse.Invitation
	2,  // 12: settlement.v1.GetByLeaderIdResponse.settlement:type_name -> settlement.v1.Settlement
	4,  // 13: settlement.v1.SettlementService.Submit:input_type -> settlement.v1.SubmitRequest
	8,  // 14: settlement.v1.SettlementService.Get:input_type -> settlement.v1.GetRequest
	26, // 15: settlement.v1.SettlementService.GetByLeaderId:input_type -> settlement.v1.GetByLeaderIdRequest
	10, // 16: settlement.v1.SettlementService.List:input_type -> settlement.v1.ListRequest
	12, // 17: settlement.v1.SettlementService.ListPending:input_type -> settlement.v1.ListPendingRequest
	14, // 18: settlement.v1.SettlementService.Approve:input_type -> settlement.v1.ApproveRequest
	16, // 19: settlement.v1.SettlementService.Reject:input_type -> settlement.v1.RejectRequest
	18, // 20: settlement.v1.SettlementService.RemoveMember:input_type -> settlement.v1.RemoveMemberRequest
	22, // 21: settlement.v1.SettlementService.GetInvitations:input_type -> settlement.v1.GetInvitationsRequest
	20, // 22: settlement.v1.SettlementService.InviteMember:input_type -> settlement.v1.InviteMemberRequest
	24, // 23: settlement.v1.SettlementService.RevokeInvitation:input_type -> settlement.v1.RevokeInvitationRequest
	7,  // 24: settlement.v1.SettlementService.Submit:output_type -> settlement.v1.SubmitResponse
	9,  // 25: settlement.v1.SettlementService.Get:output_type -> settlement.v1.GetResponse
	27, // 26: settlement.v1.SettlementService.GetByLeaderId:output_type -> settlement.v1.GetByLeaderIdResponse
	11, // 27: settlement.v1.SettlementService.List:output_type -> settlement.v1.ListResponse
	13, // 28: settlement.v1.SettlementService.ListPending:output_type -> settlement.v1.ListPendingResponse
	15, // 29: settlement.v1.SettlementService.Approve:output_type -> settlement.v1.ApproveResponse
	17, // 30: settlement.v1.SettlementService.Reject:output_type -> settlement.v1.RejectResponse
	19, // 31: settlement.v1.SettlementService.RemoveMember:output_type -> settlement.v1.RemoveMemberResponse
	23, // 32: settlement.v1.SettlementService.GetInvitations:output_type -> settlement.v1.GetInvitationsResponse
	21, // 33: settlement.v1.SettlementService.InviteMember:output_type -> settlement.v1.InviteMemberResponse
	25, // 34: settlement.v1.SettlementService.RevokeInvitation:output_type -> settlement.v1.RevokeInvitationResponse
	24, // [24:35] is the sub-list for method output_type
	13, // [13:24] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_settlement_v1_settlement_proto_init() }
func file_settlement_v1_settlement_proto_init() {
	if File_settlement_v1_settlement_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_settlement_v1_settlement_proto_rawDesc), len(file_settlement_v1_settlement_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_settlement_v1_settlement_proto_goTypes,
		DependencyIndexes: file_settlement_v1_settlement_proto_depIdxs,
		EnumInfos:         file_settlement_v1_settlement_proto_enumTypes,
		MessageInfos:      file_settlement_v1_settlement_proto_msgTypes,
	}.Build()
	File_settlement_v1_settlement_proto = out.File
	file_settlement_v1_settlement_proto_goTypes = nil
	file_settlement_v1_settlement_proto_depIdxs = nil
}
