syntax = "proto3";

package verification.v1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/empty.proto";

// Represents verification service
service VerificationService {
  option (google.api.default_host) = "api.lasthearth.ru";

  // Returns verification requests from users, need admin privelege
  rpc List(ListRequest) returns (ListResponse) {
    option (google.api.http) = {get: "/v1/verifications"};
  }

  // Submit user verification request
  rpc Submit(SubmitRequest) returns (SubmitResponse) {
    option (google.api.http) = {
      post: "/v1/verification"
      body: "*"
    };
  }

  // Approve user verification request, need admin privelege
  rpc Approve(ApproveRequest) returns (ApproveResponse) {
    option (google.api.http) = {
      post: "/v1/rules/verification/{user_id}/approve"
      body: "*"
    };
  }

  // Reject user verification request, need admin privelege
  rpc Reject(RejectRequest) returns (RejectResponse) {
    option (google.api.http) = {
      post: "/v1/rules/verification/{user_id}/reject"
      body: "*"
    };
  }

  // Get user verification details
  rpc Details(DetailsRequest) returns (DetailsResponse) {
    option (google.api.http) = {get: "/v1/verifications/{user_id}/details"};
  }
}

message ListRequest {}

message ListResponse {
  repeated VerifyUserRequest requests = 1;

  message VerifyUserRequest {
    string id = 1;
    string user_id = 2;
    string user_name = 3;
    string user_game_name = 4;
    string contacts = 5;
    repeated Answer answers = 6;
  }
}

message Answer {
  string question = 1;
  string answer = 2;
}

message SubmitRequest {
  string user_name = 1 [(google.api.field_behavior) = REQUIRED];
  string user_game_name = 2 [(google.api.field_behavior) = REQUIRED];
  string contacts = 3 [(google.api.field_behavior) = REQUIRED];
  repeated Answer answers = 4 [(google.api.field_behavior) = REQUIRED];
}

message SubmitResponse {}

message ApproveRequest {
  string user_id = 1;
}

message ApproveResponse {}

message RejectRequest {
  string user_id = 1;
  string rejection_reason = 2;
}

message RejectResponse {}

message DetailsRequest {}

message DetailsResponse {
  string id = 1;
  string status = 2;
  string rejection_reason = 3;
}
