syntax = "proto3";

package user.v1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/empty.proto";
import "rules/v1/rules.proto";

// Represents user specific actions
service UserService {
  option (google.api.default_host) = "api.lasthearth.ru";

  rpc UpdateAvatar(UpdateAvatarRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/users/{user_id}/avatar"
      body: "*"
    };
  }

  rpc GetUser(GetUserRequest) returns (User) {
    option (google.api.http) = {get: "/v1/users/{user_id}"};
  }

  rpc SearchUsers(SearchUsersRequest) returns (SearchUsersResponse) {
    option (google.api.http) = {get: "/v1/users/search"};
  }

  rpc ChangeNickname(ChangeNicknameRequest) returns (ChangeNicknameResponse) {
    option (google.api.http) = {
      put: "/v1/users/{user_id}/nickname"
      body: "*"
    };
  }
}

message UpdateAvatarRequest {
  bytes avatar = 1 [(google.api.field_behavior) = REQUIRED];
  string user_id = 2 [(google.api.field_behavior) = REQUIRED];
}

message GetUserRequest {
  string user_id = 1 [(google.api.field_behavior) = REQUIRED];
}

message User {
  string user_id = 1;
  string user_game_name = 2;
  Image avatar = 3;
  string user_name = 4;
  string previous_nickname = 5;

  message Image {
    string original = 1;
    string x96 = 2;
    string x48 = 3;
  }
}

message SearchUsersRequest {
  string query = 1 [(google.api.field_behavior) = REQUIRED];
}

message SearchUsersResponse {
  repeated User users = 1;
}

message ChangeNicknameRequest {
  string user_id = 1 [(google.api.field_behavior) = REQUIRED];
  string new_nickname = 2 [(google.api.field_behavior) = REQUIRED];
}

message ChangeNicknameResponse {
  string old_nickname = 1;
  string new_nickname = 2;
}
