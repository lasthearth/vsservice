syntax = "proto3";

package vintage.v1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/protobuf/empty.proto";

option go_package = "github.com/ripls56/vsservice/v1";

//TODO: imprv doc, change json case

// Api with a basic in game data
service VintageService {
  option (google.api.default_host) = "api.lasthearth.ru";
  // Gets in game date time, and returns it in formatted string
  rpc GetGameTime(google.protobuf.Empty) returns (TimeResponse) {
    option (google.api.http) = {get: "/v1/time"};
  }

  rpc StreamGameTime(google.protobuf.Empty) returns (stream TimeResponse) {
    option (google.api.http) = {get: "/v1/time/ws"};
  }

  rpc GetOnlinePlayersCount(google.protobuf.Empty) returns (PlayersCountResponse) {
    option (google.api.http) = {get: "/v1/players/count"};
  }

  rpc StreamOnlinePlayersCount(google.protobuf.Empty) returns (stream PlayersCountResponse) {
    option (google.api.http) = {get: "/v1/players/count/ws"};
  }

  rpc GetOnlinePlayersList(google.protobuf.Empty) returns (PlayersListResponse) {
    option (google.api.http) = {get: "/v1/players/list"};
  }

  rpc StreamOnlinePlayersList(google.protobuf.Empty) returns (stream PlayersListResponse) {
    option (google.api.http) = {get: "/v1/players/list/ws"};
  }

  rpc GetPlayerStats(PlayerStatsRequest) returns (PlayerStatsResponse) {
    option (google.api.http) = {get: "/v1/{name}/stats"};
  }
}

message PlayerStatsRequest {
  string name = 1;
}

message PlayerStatsResponse {
  string name = 2;
  int32 death_count = 3;
  float hoursPlayed = 5;
  int64 last_online = 6;
  int32 players_killed = 7;

//  message Death {
//    string cause = 1;
//    string entity_name = 2;
//  }
}

message TimeResponse {
  string formatted_time = 1;
}

message PlayersCountResponse {
  int32 count = 1;
  int32 max = 2;
}

message PlayersListResponse {
  repeated string player_names = 1;
}
