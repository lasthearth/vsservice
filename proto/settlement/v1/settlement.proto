syntax = "proto3";

package settlement.v1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/empty.proto";

// Represents settlement management service
service SettlementService {
  option (google.api.default_host) = "api.lasthearth.ru";

  // Submit a new settlement registration request
  rpc Submit(SubmitRequest) returns (SubmitResponse) {
    option (google.api.http) = {
      post: "/v1/settlements"
      body: "*"
    };
  }

  // Get settlement by ID
  rpc Get(GetRequest) returns (GetResponse) {
    option (google.api.http) = {get: "/v1/settlements/{id}"};
  }

  rpc GetByLeaderId(GetByLeaderIdRequest) returns (GetByLeaderIdResponse) {
    option (google.api.http) = {get: "/v1/user/{leader_id}/settlements"};
  }

  // List all settlements
  rpc List(ListRequest) returns (ListResponse) {
    option (google.api.http) = {get: "/v1/settlements"};
  }

  // List pending settlement requests (requires admin privileges)
  rpc ListPending(ListPendingRequest) returns (ListPendingResponse) {
    option (google.api.http) = {get: "/v1/settlements/verifications"};
  }

  // Approve a settlement request (requires admin privileges)
  rpc Approve(ApproveRequest) returns (ApproveResponse) {
    option (google.api.http) = {
      post: "/v1/settlements/{id}/verification:approve"
      body: "*"
    };
  }

  // Reject a settlement request (requires admin privileges)
  rpc Reject(RejectRequest) returns (RejectResponse) {
    option (google.api.http) = {
      post: "/v1/settlements/{id}/verification:reject"
      body: "*"
    };
  }

  // Get the verification status of a settlement request
  rpc VerificationStatus(VerificationStatusRequest) returns (VerificationStatusResponse) {
    option (google.api.http) = {get: "/v1/settlements/{id}/verification:status"};
  }

  // Remove a member from a settlement (requires admin privileges)
  rpc RemoveMember(RemoveMemberRequest) returns (RemoveMemberResponse) {
    option (google.api.http) = {delete: "/v1/settlements/{settlement_id}/members/{user_id}"};
  }

  // Get all invitations to a settlement
  rpc GetInvitations(GetInvitationsRequest) returns (GetInvitationsResponse) {
    option (google.api.http) = {get: "/v1/settlements/{settlement_id}/invitations"};
  }

  // Get all invitations to a settlement belonging to a user
  rpc GetUserInvitations(GetUserInvitationsRequest) returns (GetUserInvitationsResponse) {
    option (google.api.http) = {get: "/v1/users/{user_id}/settlements/invitations"};
  }

  // Accept an invitation to a settlement
  rpc AcceptInvitation(AcceptInvitationRequest) returns (AcceptInvitationResponse) {
    option (google.api.http) = {post: "/v1/settlements/invitations/{invitation_id}:accept"};
  }

  // Invite a member to a settlement (requires being the settlement leader)
  rpc InviteMember(InviteMemberRequest) returns (InviteMemberResponse) {
    option (google.api.http) = {
      post: "/v1/settlements/{settlement_id}/invitations"
      body: "*"
    };
  }

  // Revoke an invitation to a settlement (requires being the settlement leader)
  rpc RevokeInvitation(RevokeInvitationRequest) returns (RevokeInvitationResponse) {
    option (google.api.http) = {
      post: "/v1/settlements/{settlement_id}/invitations/{invitation_id}:revoke"
      body: "*"
    };
  }
}

message GetUserInvitationsRequest {
  string user_id = 1 [(google.api.field_behavior) = REQUIRED];
}

message GetUserInvitationsResponse {
  repeated Invitation invitations = 1;
}

message AcceptInvitationRequest {
  string invitation_id = 1 [(google.api.field_behavior) = REQUIRED];
}

message AcceptInvitationResponse {}

message Settlement {
  string id = 1;
  string name = 2;
  SettlementType type = 3;
  string description = 4;
  string diplomacy = 5;
  Member leader = 6;
  repeated Member members = 7;
  repeated Attachment attachments = 8;
  Vector2 coordinates = 9;
  int64 created_at = 10;
  int64 updated_at = 11;
}

enum SettlementType {
  SETTLEMENT_TYPE_UNSPECIFIED = 0;
  CAMP = 1;
  VILLAGE = 2;
  TOWNSHIP = 3;
  CITY = 4;
  PROVINCE = 5;
}

message Member {
  string user_id = 1 [(google.api.field_behavior) = REQUIRED];
}

message SubmitRequest {
  Type type = 1 [(google.api.field_behavior) = REQUIRED];
  string name = 2 [(google.api.field_behavior) = REQUIRED];
  string description = 3 [(google.api.field_behavior) = REQUIRED];
  string diplomacy = 4 [(google.api.field_behavior) = REQUIRED];
  Vector2 coordinates = 5 [(google.api.field_behavior) = REQUIRED];
  repeated SubmitAttachment attachments = 6 [(google.api.field_behavior) = REQUIRED];

  message SubmitAttachment {
    bytes data = 1 [(google.api.field_behavior) = REQUIRED];
    string description = 2 [(google.api.field_behavior) = REQUIRED];
  }

  enum Type {
    TYPE_UNSPECIFIED = 0;
    CAMP = 1;
    GUILD = 2;
    ORDEN = 3;
  }
}

message Vector2 {
  int32 x = 1;
  int32 y = 2;
}

message Attachment {
  string desc = 1 [(google.api.field_behavior) = REQUIRED];
  string url = 2 [(google.api.field_behavior) = REQUIRED];
}

message SubmitResponse {}

message GetRequest {
  string id = 1 [(google.api.field_behavior) = REQUIRED];
}

message GetResponse {
  Settlement settlement = 1;
}

message ListRequest {}

message ListResponse {
  repeated Settlement settlements = 1;
}

message ListPendingRequest {}

message ListPendingResponse {
  repeated Settlement settlements = 1;
}

message ApproveRequest {
  string id = 1 [(google.api.field_behavior) = REQUIRED];
}

message ApproveResponse {}

message RejectRequest {
  string id = 1 [(google.api.field_behavior) = REQUIRED];
  string rejection_reason = 2 [(google.api.field_behavior) = REQUIRED];
}

message RejectResponse {}

message RemoveMemberRequest {
  string settlement_id = 1 [(google.api.field_behavior) = REQUIRED];
  string user_id = 2 [(google.api.field_behavior) = REQUIRED];
}

message RemoveMemberResponse {}

message InviteMemberRequest {
  string settlement_id = 1 [(google.api.field_behavior) = REQUIRED];
  string user_id = 2 [(google.api.field_behavior) = REQUIRED];
}

message InviteMemberResponse {}

message GetInvitationsRequest {
  string settlement_id = 1 [(google.api.field_behavior) = REQUIRED];
}

message GetInvitationsResponse {
  repeated Invitation invitations = 1;
}

message Invitation {
  string id = 1;
  string user_id = 2;
  string settlement_id = 3;
}

message RevokeInvitationRequest {
  string settlement_id = 1 [(google.api.field_behavior) = REQUIRED];
  string invitation_id = 2 [(google.api.field_behavior) = REQUIRED];
}

message RevokeInvitationResponse {
  repeated string invitation_ids = 1;
}

message GetByLeaderIdRequest {
  string leader_id = 1 [(google.api.field_behavior) = REQUIRED];
}

message GetByLeaderIdResponse {
  Settlement settlement = 1;
}

message VerificationStatusRequest {
  string id = 1 [(google.api.field_behavior) = REQUIRED];
}

message VerificationStatusResponse {
  string status = 1;
  string rejection_reason = 2;
}
